{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mnikh\\\\OneDrive\\\\Desktop\\\\jobopputunities\\\\client\\\\src\\\\pages\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Paper, Typography, Box, Tabs, Tab, Table, TableBody, TableCell, TableHead, TableRow, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField } from '@mui/material';\nimport api from '../utils/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [value, setValue] = useState(0);\n  const [pendingJobHolders, setPendingJobHolders] = useState([]);\n  const [verifiedJobHolders, setVerifiedJobHolders] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  });\n  useEffect(() => {\n    fetchUsers();\n    fetchJobs();\n  }, []);\n  const fetchUsers = async () => {\n    try {\n      const response = await api.get('/api/admin/users');\n      setPendingJobHolders(response.data.filter(user => user.role === 'jobholder' && !user.isVerified));\n      setVerifiedJobHolders(response.data.filter(user => user.role === 'jobholder' && user.isVerified));\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n  const fetchJobs = async () => {\n    try {\n      const response = await api.get('/api/admin/jobs');\n      setJobs(response.data);\n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n    }\n  };\n  const handleVerify = async userId => {\n    try {\n      await api.post(`/api/admin/verify/${userId}`, credentials);\n      setDialogOpen(false);\n      fetchUsers();\n    } catch (error) {\n      console.error('Error verifying user:', error);\n    }\n  };\n  const handleRemoveJob = async jobId => {\n    if (window.confirm('Are you sure you want to remove this job?')) {\n      try {\n        await api.delete(`/api/admin/jobs/${jobId}`);\n        fetchJobs();\n      } catch (error) {\n        console.error('Error removing job:', error);\n      }\n    }\n  };\n  const handleRemoveVerification = async userId => {\n    if (window.confirm('Are you sure you want to remove verification from this job holder?')) {\n      try {\n        await api.post(`/api/admin/remove-verification/${userId}`);\n        fetchUsers(); // Refresh the users list\n      } catch (error) {\n        console.error('Error removing verification:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      py: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Admin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider',\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: value,\n          onChange: (e, newValue) => setValue(newValue),\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Pending Verifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Verified Job Holders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Manage Jobs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        role: \"tabpanel\",\n        hidden: value !== 0,\n        children: value === 0 && /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Company\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: pendingJobHolders.map(user => {\n              var _user$jobDetails, _user$jobDetails2;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: user.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: (_user$jobDetails = user.jobDetails) === null || _user$jobDetails === void 0 ? void 0 : _user$jobDetails.companyName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: (_user$jobDetails2 = user.jobDetails) === null || _user$jobDetails2 === void 0 ? void 0 : _user$jobDetails2.role\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: () => {\n                      setSelectedUser(user);\n                      setDialogOpen(true);\n                    },\n                    children: \"Verify\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 21\n                }, this)]\n              }, user._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        role: \"tabpanel\",\n        hidden: value !== 1,\n        children: value === 1 && /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Company\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: verifiedJobHolders.map(user => {\n              var _user$jobDetails3, _user$jobDetails4;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: user.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: (_user$jobDetails3 = user.jobDetails) === null || _user$jobDetails3 === void 0 ? void 0 : _user$jobDetails3.companyName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: (_user$jobDetails4 = user.jobDetails) === null || _user$jobDetails4 === void 0 ? void 0 : _user$jobDetails4.role\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"error\",\n                    onClick: () => handleRemoveVerification(user._id),\n                    children: \"Remove Verification\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this)]\n              }, user._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        role: \"tabpanel\",\n        hidden: value !== 2,\n        children: value === 2 && /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Company\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Posted By\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: jobs.map(job => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: job.companyName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: job.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: job.postedBy.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"error\",\n                  onClick: () => handleRemoveJob(job._id),\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 21\n              }, this)]\n            }, job._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: dialogOpen,\n        onClose: () => setDialogOpen(false),\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Verify Job Holder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Set Username\",\n            value: credentials.username,\n            onChange: e => setCredentials({\n              ...credentials,\n              username: e.target.value\n            }),\n            sx: {\n              mb: 2,\n              mt: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Set Password\",\n            type: \"password\",\n            value: credentials.password,\n            onChange: e => setCredentials({\n              ...credentials,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setDialogOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleVerify(selectedUser._id),\n            variant: \"contained\",\n            children: \"Verify & Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"eB8RCWAwPgBTVpe33SngNHdZKZE=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Container","Paper","Typography","Box","Tabs","Tab","Table","TableBody","TableCell","TableHead","TableRow","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","api","jsxDEV","_jsxDEV","AdminDashboard","_s","value","setValue","pendingJobHolders","setPendingJobHolders","verifiedJobHolders","setVerifiedJobHolders","jobs","setJobs","selectedUser","setSelectedUser","dialogOpen","setDialogOpen","credentials","setCredentials","username","password","fetchUsers","fetchJobs","response","get","data","filter","user","role","isVerified","error","console","handleVerify","userId","post","handleRemoveJob","jobId","window","confirm","delete","handleRemoveVerification","sx","py","children","elevation","p","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","borderBottom","borderColor","mb","onChange","e","newValue","label","hidden","map","_user$jobDetails","_user$jobDetails2","email","jobDetails","companyName","color","onClick","_id","_user$jobDetails3","_user$jobDetails4","job","postedBy","open","onClose","fullWidth","target","mt","type","_c","$RefreshReg$"],"sources":["C:/Users/mnikh/OneDrive/Desktop/jobopputunities/client/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  Tabs,\r\n  Tab,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField\r\n} from '@mui/material';\r\nimport api from '../utils/axios';\r\n\r\nconst AdminDashboard = () => {\r\n  const [value, setValue] = useState(0);\r\n  const [pendingJobHolders, setPendingJobHolders] = useState([]);\r\n  const [verifiedJobHolders, setVerifiedJobHolders] = useState([]);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [credentials, setCredentials] = useState({\r\n    username: '',\r\n    password: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await api.get('/api/admin/users');\r\n      setPendingJobHolders(response.data.filter(user => \r\n        user.role === 'jobholder' && !user.isVerified\r\n      ));\r\n      setVerifiedJobHolders(response.data.filter(user => \r\n        user.role === 'jobholder' && user.isVerified\r\n      ));\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n    }\r\n  };\r\n\r\n  const fetchJobs = async () => {\r\n    try {\r\n      const response = await api.get('/api/admin/jobs');\r\n      setJobs(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching jobs:', error);\r\n    }\r\n  };\r\n\r\n  const handleVerify = async (userId) => {\r\n    try {\r\n      await api.post(`/api/admin/verify/${userId}`, credentials);\r\n      setDialogOpen(false);\r\n      fetchUsers();\r\n    } catch (error) {\r\n      console.error('Error verifying user:', error);\r\n    }\r\n  };\r\n\r\n  const handleRemoveJob = async (jobId) => {\r\n    if (window.confirm('Are you sure you want to remove this job?')) {\r\n      try {\r\n        await api.delete(`/api/admin/jobs/${jobId}`);\r\n        fetchJobs();\r\n      } catch (error) {\r\n        console.error('Error removing job:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRemoveVerification = async (userId) => {\r\n    if (window.confirm('Are you sure you want to remove verification from this job holder?')) {\r\n      try {\r\n        await api.post(`/api/admin/remove-verification/${userId}`);\r\n        fetchUsers(); // Refresh the users list\r\n      } catch (error) {\r\n        console.error('Error removing verification:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container sx={{ py: 4 }}>\r\n      <Paper elevation={3} sx={{ p: 3 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Admin Dashboard\r\n        </Typography>\r\n        \r\n        <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\r\n          <Tabs value={value} onChange={(e, newValue) => setValue(newValue)}>\r\n            <Tab label=\"Pending Verifications\" />\r\n            <Tab label=\"Verified Job Holders\" />\r\n            <Tab label=\"Manage Jobs\" />\r\n          </Tabs>\r\n        </Box>\r\n\r\n        {/* Pending Verifications Tab */}\r\n        <Box role=\"tabpanel\" hidden={value !== 0}>\r\n          {value === 0 && (\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Email</TableCell>\r\n                  <TableCell>Company</TableCell>\r\n                  <TableCell>Role</TableCell>\r\n                  <TableCell>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {pendingJobHolders.map((user) => (\r\n                  <TableRow key={user._id}>\r\n                    <TableCell>{user.username}</TableCell>\r\n                    <TableCell>{user.email}</TableCell>\r\n                    <TableCell>{user.jobDetails?.companyName}</TableCell>\r\n                    <TableCell>{user.jobDetails?.role}</TableCell>\r\n                    <TableCell>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          setSelectedUser(user);\r\n                          setDialogOpen(true);\r\n                        }}\r\n                      >\r\n                        Verify\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n        </Box>\r\n\r\n        {/* Verified Job Holders Tab */}\r\n        <Box role=\"tabpanel\" hidden={value !== 1}>\r\n          {value === 1 && (\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Email</TableCell>\r\n                  <TableCell>Company</TableCell>\r\n                  <TableCell>Role</TableCell>\r\n                  <TableCell>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {verifiedJobHolders.map((user) => (\r\n                  <TableRow key={user._id}>\r\n                    <TableCell>{user.username}</TableCell>\r\n                    <TableCell>{user.email}</TableCell>\r\n                    <TableCell>{user.jobDetails?.companyName}</TableCell>\r\n                    <TableCell>{user.jobDetails?.role}</TableCell>\r\n                    <TableCell>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"error\"\r\n                        onClick={() => handleRemoveVerification(user._id)}\r\n                      >\r\n                        Remove Verification\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n        </Box>\r\n\r\n        {/* Manage Jobs Tab */}\r\n        <Box role=\"tabpanel\" hidden={value !== 2}>\r\n          {value === 2 && (\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Company</TableCell>\r\n                  <TableCell>Role</TableCell>\r\n                  <TableCell>Posted By</TableCell>\r\n                  <TableCell>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {jobs.map((job) => (\r\n                  <TableRow key={job._id}>\r\n                    <TableCell>{job.companyName}</TableCell>\r\n                    <TableCell>{job.role}</TableCell>\r\n                    <TableCell>{job.postedBy.email}</TableCell>\r\n                    <TableCell>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"error\"\r\n                        onClick={() => handleRemoveJob(job._id)}\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n        </Box>\r\n\r\n        {/* Verification Dialog */}\r\n        <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)}>\r\n          <DialogTitle>Verify Job Holder</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Set Username\"\r\n              value={credentials.username}\r\n              onChange={(e) => setCredentials({...credentials, username: e.target.value})}\r\n              sx={{ mb: 2, mt: 2 }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Set Password\"\r\n              type=\"password\"\r\n              value={credentials.password}\r\n              onChange={(e) => setCredentials({...credentials, password: e.target.value})}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setDialogOpen(false)}>Cancel</Button>\r\n            <Button \r\n              onClick={() => handleVerify(selectedUser._id)}\r\n              variant=\"contained\"\r\n            >\r\n              Verify & Create Account\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}