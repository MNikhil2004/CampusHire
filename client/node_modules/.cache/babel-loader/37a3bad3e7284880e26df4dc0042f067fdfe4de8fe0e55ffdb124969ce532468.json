{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mnikh\\\\OneDrive\\\\Desktop\\\\jobopputunities\\\\client\\\\src\\\\pages\\\\Questions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Paper, Typography, Tabs, Tab, Box, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Questions = () => {\n  _s();\n  const [value, setValue] = useState(0);\n  const [questions, setQuestions] = useState({\n    technical: [],\n    nonTechnical: []\n  });\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/questions/job/${id}`);\n        const technical = response.data.filter(q => q.type === 'technical');\n        const nonTechnical = response.data.filter(q => q.type === 'non-technical');\n        setQuestions({\n          technical,\n          nonTechnical\n        });\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    };\n    fetchQuestions();\n  }, [id]);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      py: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Interview Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider',\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: value,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Technical Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Non-Technical Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        role: \"tabpanel\",\n        hidden: value !== 0,\n        children: value === 0 && /*#__PURE__*/_jsxDEV(List, {\n          children: questions.technical.map((q, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `Q${index + 1}: ${q.question}`,\n                secondary: q.answer && `A: ${q.answer}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)]\n          }, q._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        role: \"tabpanel\",\n        hidden: value !== 1,\n        children: value === 1 && /*#__PURE__*/_jsxDEV(List, {\n          children: questions.nonTechnical.map((q, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `Q${index + 1}: ${q.question}`,\n                secondary: q.answer && `A: ${q.answer}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this)]\n          }, q._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Questions, \"pvfcq2h3Vbv9GQZT/+WZ77fJG7w=\", false, function () {\n  return [useParams];\n});\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Container","Paper","Typography","Tabs","Tab","Box","List","ListItem","ListItemText","Divider","axios","jsxDEV","_jsxDEV","Questions","_s","value","setValue","questions","setQuestions","technical","nonTechnical","id","fetchQuestions","response","get","data","filter","q","type","error","console","handleChange","event","newValue","sx","py","children","elevation","p","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","borderBottom","borderColor","mb","onChange","label","role","hidden","map","index","Fragment","primary","question","secondary","answer","_id","_c","$RefreshReg$"],"sources":["C:/Users/mnikh/OneDrive/Desktop/jobopputunities/client/src/pages/Questions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Divider\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst Questions = () => {\r\n  const [value, setValue] = useState(0);\r\n  const [questions, setQuestions] = useState({ technical: [], nonTechnical: [] });\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/questions/job/${id}`);\r\n        const technical = response.data.filter(q => q.type === 'technical');\r\n        const nonTechnical = response.data.filter(q => q.type === 'non-technical');\r\n        setQuestions({ technical, nonTechnical });\r\n      } catch (error) {\r\n        console.error('Error fetching questions:', error);\r\n      }\r\n    };\r\n\r\n    fetchQuestions();\r\n  }, [id]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Container sx={{ py: 4 }}>\r\n      <Paper elevation={3} sx={{ p: 3 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Interview Questions\r\n        </Typography>\r\n        \r\n        <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\r\n          <Tabs value={value} onChange={handleChange}>\r\n            <Tab label=\"Technical Questions\" />\r\n            <Tab label=\"Non-Technical Questions\" />\r\n          </Tabs>\r\n        </Box>\r\n\r\n        <Box role=\"tabpanel\" hidden={value !== 0}>\r\n          {value === 0 && (\r\n            <List>\r\n              {questions.technical.map((q, index) => (\r\n                <React.Fragment key={q._id}>\r\n                  <ListItem>\r\n                    <ListItemText\r\n                      primary={`Q${index + 1}: ${q.question}`}\r\n                      secondary={q.answer && `A: ${q.answer}`}\r\n                    />\r\n                  </ListItem>\r\n                  <Divider />\r\n                </React.Fragment>\r\n              ))}\r\n            </List>\r\n          )}\r\n        </Box>\r\n\r\n        <Box role=\"tabpanel\" hidden={value !== 1}>\r\n          {value === 1 && (\r\n            <List>\r\n              {questions.nonTechnical.map((q, index) => (\r\n                <React.Fragment key={q._id}>\r\n                  <ListItem>\r\n                    <ListItemText\r\n                      primary={`Q${index + 1}: ${q.question}`}\r\n                      secondary={q.answer && `A: ${q.answer}`}\r\n                    />\r\n                  </ListItem>\r\n                  <Divider />\r\n                </React.Fragment>\r\n              ))}\r\n            </List>\r\n          )}\r\n        </Box>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Questions; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}