{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000,\n  withCredentials: true\n});\n\n// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  // For multipart/form-data, don't set Content-Type\n  if (config.data instanceof FormData) {\n    delete config.headers['Content-Type'];\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor\napi.interceptors.response.use(response => response, error => {\n  if (error.code === 'ECONNABORTED') {\n    return Promise.reject(new Error('Request timed out. Please try again.'));\n  }\n  if (!error.response) {\n    console.error('Network Error Details:', error);\n    return Promise.reject(new Error('Network error. Please check if the server is running.'));\n  }\n  return Promise.reject(error.response.data);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","timeout","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","data","FormData","error","Promise","reject","response","code","Error","console"],"sources":["C:/Users/mnikh/OneDrive/Desktop/jobopputunities/client/src/utils/axios.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  },\r\n  timeout: 10000,\r\n  withCredentials: true\r\n});\r\n\r\n// Add a request interceptor to add the auth token to requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    // For multipart/form-data, don't set Content-Type\r\n    if (config.data instanceof FormData) {\r\n      delete config.headers['Content-Type'];\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.code === 'ECONNABORTED') {\r\n      return Promise.reject(new Error('Request timed out. Please try again.'));\r\n    }\r\n    if (!error.response) {\r\n      console.error('Network Error Details:', error);\r\n      return Promise.reject(new Error('Network error. Please check if the server is running.'));\r\n    }\r\n    return Promise.reject(error.response.data);\r\n  }\r\n);\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;EACjEC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,OAAO,EAAE,KAAK;EACdC,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACAR,GAAG,CAACS,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACN,OAAO,CAACU,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA;EACA,IAAID,MAAM,CAACK,IAAI,YAAYC,QAAQ,EAAE;IACnC,OAAON,MAAM,CAACN,OAAO,CAAC,cAAc,CAAC;EACvC;EACA,OAAOM,MAAM;AACf,CAAC,EACAO,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAnB,GAAG,CAACS,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC1BW,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACT,IAAIA,KAAK,CAACI,IAAI,KAAK,cAAc,EAAE;IACjC,OAAOH,OAAO,CAACC,MAAM,CAAC,IAAIG,KAAK,CAAC,sCAAsC,CAAC,CAAC;EAC1E;EACA,IAAI,CAACL,KAAK,CAACG,QAAQ,EAAE;IACnBG,OAAO,CAACN,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIG,KAAK,CAAC,uDAAuD,CAAC,CAAC;EAC3F;EACA,OAAOJ,OAAO,CAACC,MAAM,CAACF,KAAK,CAACG,QAAQ,CAACL,IAAI,CAAC;AAC5C,CACF,CAAC;AAED,eAAejB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}