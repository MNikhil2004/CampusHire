{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mnikh\\\\OneDrive\\\\Desktop\\\\jobopputunities\\\\client\\\\src\\\\pages\\\\Questions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Paper, Typography, Box, Divider, List, ListItem, ListItemText, Chip } from '@mui/material';\nimport api from '../utils/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Questions = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    id: jobId\n  } = useParams();\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await api.get(`/api/questions/job/${jobId}`);\n        setQuestions(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n        setError('Failed to load questions. Please try again later.');\n        setLoading(false);\n      }\n    };\n    fetchQuestions();\n  }, [jobId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        py: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading questions...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        py: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      py: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Interview Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), questions.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No questions available for this job yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            alignItems: \"flex-start\",\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: 2,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: [\"Q\", index + 1, \": \", question.question]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: question.type,\n                  color: question.type === 'technical' ? 'primary' : 'secondary',\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 23\n              }, this),\n              secondary: question.answer && /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  display: 'inline'\n                },\n                component: \"span\",\n                variant: \"body2\",\n                color: \"text.primary\",\n                children: [\"Answer: \", question.answer]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), index < questions.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 50\n          }, this)]\n        }, question._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Questions, \"jLIMvHTu+NKy/cEXJxj8FmmfIXc=\", false, function () {\n  return [useParams];\n});\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Container","Paper","Typography","Box","Divider","List","ListItem","ListItemText","Chip","api","jsxDEV","_jsxDEV","Questions","_s","questions","setQuestions","loading","setLoading","error","setError","id","jobId","fetchQuestions","response","get","data","console","sx","py","children","fileName","_jsxFileName","lineNumber","columnNumber","color","elevation","p","variant","gutterBottom","length","map","question","index","Fragment","alignItems","primary","display","gap","label","type","size","secondary","answer","component","_id","_c","$RefreshReg$"],"sources":["C:/Users/mnikh/OneDrive/Desktop/jobopputunities/client/src/pages/Questions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Chip\r\n} from '@mui/material';\r\nimport api from '../utils/axios';\r\n\r\nconst Questions = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const { id: jobId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        const response = await api.get(`/api/questions/job/${jobId}`);\r\n        setQuestions(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching questions:', error);\r\n        setError('Failed to load questions. Please try again later.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchQuestions();\r\n  }, [jobId]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container sx={{ py: 4 }}>\r\n        <Typography>Loading questions...</Typography>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container sx={{ py: 4 }}>\r\n        <Typography color=\"error\">{error}</Typography>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container sx={{ py: 4 }}>\r\n      <Paper elevation={3} sx={{ p: 3 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Interview Questions\r\n        </Typography>\r\n        \r\n        {questions.length === 0 ? (\r\n          <Typography>No questions available for this job yet.</Typography>\r\n        ) : (\r\n          <List>\r\n            {questions.map((question, index) => (\r\n              <React.Fragment key={question._id}>\r\n                <ListItem alignItems=\"flex-start\">\r\n                  <ListItemText\r\n                    primary={\r\n                      <Box display=\"flex\" alignItems=\"center\" gap={2}>\r\n                        <Typography variant=\"h6\">\r\n                          Q{index + 1}: {question.question}\r\n                        </Typography>\r\n                        <Chip \r\n                          label={question.type} \r\n                          color={question.type === 'technical' ? 'primary' : 'secondary'}\r\n                          size=\"small\"\r\n                        />\r\n                      </Box>\r\n                    }\r\n                    secondary={\r\n                      question.answer && (\r\n                        <Typography\r\n                          sx={{ display: 'inline' }}\r\n                          component=\"span\"\r\n                          variant=\"body2\"\r\n                          color=\"text.primary\"\r\n                        >\r\n                          Answer: {question.answer}\r\n                        </Typography>\r\n                      )\r\n                    }\r\n                  />\r\n                </ListItem>\r\n                {index < questions.length - 1 && <Divider />}\r\n              </React.Fragment>\r\n            ))}\r\n          </List>\r\n        )}\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Questions; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SACEC,SAAS,EACTC,KAAK,EACLC,UAAU,EACVC,GAAG,EACHC,OAAO,EACPC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,IAAI,QACC,eAAe;AACtB,OAAOC,GAAG,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM;IAAEuB,EAAE,EAAEC;EAAM,CAAC,GAAGtB,SAAS,CAAC,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACd,MAAMwB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,GAAG,CAACe,GAAG,CAAC,sBAAsBH,KAAK,EAAE,CAAC;QAC7DN,YAAY,CAACQ,QAAQ,CAACE,IAAI,CAAC;QAC3BR,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdQ,OAAO,CAACR,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDC,QAAQ,CAAC,mDAAmD,CAAC;QAC7DF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDK,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACD,KAAK,CAAC,CAAC;EAEX,IAAIL,OAAO,EAAE;IACX,oBACEL,OAAA,CAACX,SAAS;MAAC2B,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,eACvBlB,OAAA,CAACT,UAAU;QAAA2B,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAEhB;EAEA,IAAIf,KAAK,EAAE;IACT,oBACEP,OAAA,CAACX,SAAS;MAAC2B,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,eACvBlB,OAAA,CAACT,UAAU;QAACgC,KAAK,EAAC,OAAO;QAAAL,QAAA,EAAEX;MAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAEhB;EAEA,oBACEtB,OAAA,CAACX,SAAS;IAAC2B,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,eACvBlB,OAAA,CAACV,KAAK;MAACkC,SAAS,EAAE,CAAE;MAACR,EAAE,EAAE;QAAES,CAAC,EAAE;MAAE,CAAE;MAAAP,QAAA,gBAChClB,OAAA,CAACT,UAAU;QAACmC,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAT,QAAA,EAAC;MAEtC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,EAEZnB,SAAS,CAACyB,MAAM,KAAK,CAAC,gBACrB5B,OAAA,CAACT,UAAU;QAAA2B,QAAA,EAAC;MAAwC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,gBAEjEtB,OAAA,CAACN,IAAI;QAAAwB,QAAA,EACFf,SAAS,CAAC0B,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7B/B,OAAA,CAACf,KAAK,CAAC+C,QAAQ;UAAAd,QAAA,gBACblB,OAAA,CAACL,QAAQ;YAACsC,UAAU,EAAC,YAAY;YAAAf,QAAA,eAC/BlB,OAAA,CAACJ,YAAY;cACXsC,OAAO,eACLlC,OAAA,CAACR,GAAG;gBAAC2C,OAAO,EAAC,MAAM;gBAACF,UAAU,EAAC,QAAQ;gBAACG,GAAG,EAAE,CAAE;gBAAAlB,QAAA,gBAC7ClB,OAAA,CAACT,UAAU;kBAACmC,OAAO,EAAC,IAAI;kBAAAR,QAAA,GAAC,GACtB,EAACa,KAAK,GAAG,CAAC,EAAC,IAAE,EAACD,QAAQ,CAACA,QAAQ;gBAAA;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtB,CAAC,eACbtB,OAAA,CAACH,IAAI;kBACHwC,KAAK,EAAEP,QAAQ,CAACQ,IAAK;kBACrBf,KAAK,EAAEO,QAAQ,CAACQ,IAAI,KAAK,WAAW,GAAG,SAAS,GAAG,WAAY;kBAC/DC,IAAI,EAAC;gBAAO;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACb,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CACN;cACDkB,SAAS,EACPV,QAAQ,CAACW,MAAM,iBACbzC,OAAA,CAACT,UAAU;gBACTyB,EAAE,EAAE;kBAAEmB,OAAO,EAAE;gBAAS,CAAE;gBAC1BO,SAAS,EAAC,MAAM;gBAChBhB,OAAO,EAAC,OAAO;gBACfH,KAAK,EAAC,cAAc;gBAAAL,QAAA,GACrB,UACS,EAACY,QAAQ,CAACW,MAAM;cAAA;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACd;YAEf;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC,EACVS,KAAK,GAAG5B,SAAS,CAACyB,MAAM,GAAG,CAAC,iBAAI5B,OAAA,CAACP,OAAO;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,GA7BzBQ,QAAQ,CAACa,GAAG;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA8BjB,CACjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEhB,CAAC;AAACpB,EAAA,CAvFID,SAAS;EAAA,QAISb,SAAS;AAAA;AAAAwD,EAAA,GAJ3B3C,SAAS;AAyFf,eAAeA,SAAS;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}